
import os, json, runpy, shutil
import gradio as gr

def _ensure_status2_map():
    for c in [
        "/content/repo/examples/status2_map.json",
        "/content/tpok003_full/examples/status2_map.json",
        "examples/status2_map.json",
        "./examples/status2_map.json",
    ]:
        if os.path.exists(c):
            try:
                shutil.copy(c, "/content/status2_map.json")
            except Exception:
                pass
            break

def _run_nbutest(file1, file2, date_str):
    if file1 is None or file2 is None:
        raise gr.Error("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–∞ —Ñ–∞–π–ª–∞ (CSV/XLSX).")
    if not date_str:
        raise gr.Error("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.08.2025).")

    settings = {"files": [file1.name, file2.name], "–ø–æ—Ç–æ—á–Ω–∞–¥–∞—Ç–∞": date_str}
    with open("/content/app_settings.json", "w", encoding="utf-8") as f:
        json.dump(settings, f, ensure_ascii=False, indent=2)

    _ensure_status2_map()

    # –ò—â–µ–º —Å–∫—Ä–∏–ø—Ç
    for p in ["/content/repo/scripts/nbutest.py",
              "/content/tpok003_full/scripts/nbutest.py",
              "scripts/nbutest.py", "./scripts/nbutest.py"]:
        if os.path.exists(p):
            script_path = p
            break
    else:
        raise gr.Error("–ù–µ –Ω–∞–π–¥–µ–Ω scripts/nbutest.py")

    try:
        runpy.run_path(script_path, run_name="__main__")
    except SystemExit:
        pass

    # –ù–∞—Ö–æ–¥–∏–º –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
    for c in [f"/content/result_{date_str}.xlsx", f"result_{date_str}.xlsx"]:
        if os.path.exists(c):
            return c
    latest = None
    for fn in os.listdir("/content"):
        p = os.path.join("/content", fn)
        if fn.lower().endswith(".xlsx") and fn.startswith("result_"):
            if latest is None or os.path.getmtime(p) > os.path.getmtime(latest):
                latest = p
    if latest:
        return latest
    raise gr.Error("–ò—Ç–æ–≥–æ–≤—ã–π Excel –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –¥–∞—Ç—É.")

def launch_app():
    with gr.Blocks() as demo:
        gr.Markdown("### üß© –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ `nbutest.py` ‚Äî –∫–æ–¥ —Å–∫—Ä—ã—Ç")
        with gr.Row():
            f1 = gr.File(label="–§–∞–π–ª 1 (Excel/CSV)")
            f2 = gr.File(label="–§–∞–π–ª 2 (Excel/CSV)")
        date_input = gr.Textbox(label="–î–∞—Ç–∞ (–î–î.–ú–ú.–ì–ì–ì–ì)", placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.08.2025")
        go = gr.Button("–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É")
        out_file = gr.File(label="–†–µ–∑—É–ª—å—Ç–∞—Ç (XLSX)")
        go.click(_run_nbutest, inputs=[f1, f2, date_input], outputs=out_file)
    demo.launch()
